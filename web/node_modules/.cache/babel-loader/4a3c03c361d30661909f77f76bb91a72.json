{"ast":null,"code":"import _regeneratorRuntime from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"A:\\\\Documentos\\\\Proyectos\\\\net-a-porter-roman\\\\web\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Container, Col, Form, Alert, FormGroup, Label, Input, Button, TabContent, TabPane, Nav, NavItem, NavLink, Row } from \"reactstrap\";\nimport classnames from 'classnames';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleToNumeric =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.next = 3;\n                return fetch(\"/api/v1/convertToNumeric?number=\".concat(_this.state.romanNumber));\n\n              case 3:\n                response = _context.sent;\n                _context.prev = 4;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                body = _context.sent;\n\n                if (body.success) {\n                  _this.setState({\n                    romanResponse: body.message\n                  });\n                } else {\n                  _this.setState({\n                    romanError: {\n                      visible: true,\n                      text: body.message\n                    }\n                  });\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  romanError: {\n                    visible: true,\n                    text: _context.t0.message\n                  }\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleToRoman =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _context2.next = 3;\n                return fetch(\"/api/v1/convertToRoman?number=\".concat(_this.state.numericNumber));\n\n              case 3:\n                response = _context2.sent;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return response.json();\n\n              case 7:\n                body = _context2.sent;\n\n                if (body.success) {\n                  _this.setState({\n                    numericResponse: body.message\n                  });\n                } else {\n                  _this.setState({\n                    numericError: {\n                      visible: true,\n                      text: body.message\n                    }\n                  });\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](4);\n\n                _this.setState({\n                  numericError: {\n                    visible: true,\n                    text: _context2.t0.message\n                  }\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 11]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      romanNumber: '',\n      romanResponse: '',\n      numericNumber: '',\n      numericResponse: '',\n      numericError: {\n        visible: false,\n        text: ''\n      },\n      romanError: {\n        visible: false,\n        text: ''\n      }\n    };\n    _this.romanChange = _this.romanChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.numericChange = _this.numericChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToNumeric = _this.handleToNumeric.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToRoman = _this.handleToRoman.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"romanChange\",\n    value: function romanChange(event) {\n      this.setState({\n        romanNumber: event.target.value\n      });\n    }\n  }, {\n    key: \"numericChange\",\n    value: function numericChange(event) {\n      this.setState({\n        numericNumber: event.target.value\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Roman Conversor\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Numeric to Roman\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggle('2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Roman to numeric\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Numeric to Roman\"), React.createElement(Form, {\n        className: \"form center\",\n        onSubmit: this.handleToRoman,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Number\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"numeric\",\n        id: \"numeric\",\n        placeholder: \"Insert a number ex: 123\",\n        onChange: this.numericChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(Label, {\n        value: this.state.numericResponse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Result: \", this.state.numericResponse), React.createElement(Alert, {\n        color: \"info\",\n        isOpen: this.state.numericError.visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.numericError.text))))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Roman to numeric\"), React.createElement(Form, {\n        className: \"form center\",\n        onSubmit: this.handleToNumeric,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Roman\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"roman\",\n        id: \"roman\",\n        placeholder: \"Insert Roman Number ex: XVI\",\n        onChange: this.romanChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(Label, {\n        value: this.state.romanResponse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Result: \", this.state.romanResponse), React.createElement(Alert, {\n        color: \"info\",\n        isOpen: this.state.romanError.visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.romanError.text))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["A:\\Documentos\\Proyectos\\net-a-porter-roman\\web\\src\\App.js"],"names":["React","Component","Container","Col","Form","Alert","FormGroup","Label","Input","Button","TabContent","TabPane","Nav","NavItem","NavLink","Row","classnames","App","props","handleToNumeric","event","preventDefault","fetch","state","romanNumber","response","json","body","success","setState","romanResponse","message","romanError","visible","text","handleToRoman","numericNumber","numericResponse","numericError","romanChange","bind","numericChange","toggle","target","value","tab","activeTab","active"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SACEC,SADF,EACaC,GADb,EACkBC,IADlB,EACwBC,KADxB,EAEEC,SAFF,EAEaC,KAFb,EAEoBC,KAFpB,EAGEC,MAHF,EAGUC,UAHV,EAGsBC,OAHtB,EAG+BC,GAH/B,EAGoCC,OAHpC,EAG6CC,OAH7C,EAGsDC,GAHtD,QAIO,YAJP;AAKA,OAAOC,UAAP,MAAuB,YAAvB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UA+BnBC,eA/BmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA+BD,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBA,gBAAAA,KAAK,CAACC,cAAN;AADgB;AAAA,uBAEOC,KAAK,2CAAoC,MAAKC,KAAL,CAAWC,WAA/C,EAFZ;;AAAA;AAEVC,gBAAAA,QAFU;AAAA;AAAA;AAAA,uBAIKA,QAAQ,CAACC,IAAT,EAJL;;AAAA;AAIRC,gBAAAA,IAJQ;;AAKd,oBAAGA,IAAI,CAACC,OAAR,EAAgB;AACd,wBAAKC,QAAL,CAAc;AAAEC,oBAAAA,aAAa,EAAEH,IAAI,CAACI;AAAtB,mBAAd;AACD,iBAFD,MAEO;AACL,wBAAKF,QAAL,CAAc;AAAEG,oBAAAA,UAAU,EAAE;AAACC,sBAAAA,OAAO,EAAC,IAAT;AAAeC,sBAAAA,IAAI,EAACP,IAAI,CAACI;AAAzB;AAAd,mBAAd;AACD;;AATa;AAAA;;AAAA;AAAA;AAAA;;AAWd,sBAAKF,QAAL,CAAc;AAAEG,kBAAAA,UAAU,EAAE;AAACC,oBAAAA,OAAO,EAAC,IAAT;AAAeC,oBAAAA,IAAI,EAAC,YAAMH;AAA1B;AAAd,iBAAd;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/BC;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA8CnBI,aA9CmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA8CH,kBAAOf,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdA,gBAAAA,KAAK,CAACC,cAAN;AADc;AAAA,uBAESC,KAAK,yCAAkC,MAAKC,KAAL,CAAWa,aAA7C,EAFd;;AAAA;AAERX,gBAAAA,QAFQ;AAAA;AAAA;AAAA,uBAIOA,QAAQ,CAACC,IAAT,EAJP;;AAAA;AAINC,gBAAAA,IAJM;;AAKZ,oBAAGA,IAAI,CAACC,OAAR,EAAiB;AACf,wBAAKC,QAAL,CAAc;AAAEQ,oBAAAA,eAAe,EAAEV,IAAI,CAACI;AAAxB,mBAAd;AACD,iBAFD,MAEO;AACL,wBAAKF,QAAL,CAAc;AAAES,oBAAAA,YAAY,EAAE;AAACL,sBAAAA,OAAO,EAAC,IAAT;AAAeC,sBAAAA,IAAI,EAACP,IAAI,CAACI;AAAzB;AAAhB,mBAAd;AACD;;AATW;AAAA;;AAAA;AAAA;AAAA;;AAYZ,sBAAKF,QAAL,CAAc;AAAES,kBAAAA,YAAY,EAAE;AAACL,oBAAAA,OAAO,EAAC,IAAT;AAAeC,oBAAAA,IAAI,EAAC,aAAMH;AAA1B;AAAhB,iBAAd;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9CG;;AAAA;AAAA;AAAA;AAAA;;AAEjB,UAAKR,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXM,MAAAA,aAAa,EAAE,EAFJ;AAGXM,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,YAAY,EAAE;AAACL,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,IAAI,EAAE;AAAtB,OALH;AAMXF,MAAAA,UAAU,EAAE;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBC,QAAAA,IAAI,EAAE;AAAtB;AAND,KAAb;AAQA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AAEA,UAAKrB,eAAL,GAAuB,MAAKA,eAAL,CAAqBqB,IAArB,uDAAvB;AACA,UAAKL,aAAL,GAAqB,MAAKA,aAAL,CAAmBK,IAAnB,uDAArB;AACA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYF,IAAZ,uDAAd;AAfiB;AAiBlB;;;;gCAEWpB,K,EAAO;AACjB,WAAKS,QAAL,CAAc;AACZL,QAAAA,WAAW,EAAEJ,KAAK,CAACuB,MAAN,CAAaC;AADd,OAAd;AAGD;;;kCAEaxB,K,EAAO;AACnB,WAAKS,QAAL,CAAc;AACZO,QAAAA,aAAa,EAAEhB,KAAK,CAACuB,MAAN,CAAaC;AADhB,OAAd;AAGD;;;2BAiCMC,G,EAAK;AACV,UAAI,KAAKtB,KAAL,CAAWuB,SAAX,KAAyBD,GAA7B,EAAkC;AAChC,aAAKhB,QAAL,CAAc;AACZiB,UAAAA,SAAS,EAAED;AADC,SAAd;AAGD;AACF;;;6BACQ;AAAA;;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAE7B,UAAU,CAAC;AAAE+B,UAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWuB,SAAX,KAAyB;AAAnC,SAAD,CADvB;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACJ,MAAL,CAAY,GAAZ;AAAmB,SAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAE1B,UAAU,CAAC;AAAE+B,UAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWuB,SAAX,KAAyB;AAAnC,SAAD,CADvB;AAEE,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACJ,MAAL,CAAY,GAAZ;AAAmB,SAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CATF,CADF,EAmBE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWuB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKX,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,EAAE,EAAC,SAHL;AAIE,QAAA,WAAW,EAAC,yBAJd;AAKE,QAAA,QAAQ,EAAE,KAAKM,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF,EAcG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWc,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmD,KAAKd,KAAL,CAAWc,eAA9D,CAdH,EAeG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe,YAAX,CAAwBL,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKV,KAAL,CAAWe,YAAX,CAAwBJ,IAD5B,CAfH,CAFF,CADF,CADF,CADF,EA2BE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAE,KAAKf,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,WAAW,EAAC,6BAJd;AAKE,QAAA,QAAQ,EAAE,KAAKoB,WALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbF,EAcE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWO,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiD,KAAKP,KAAL,CAAWO,aAA5D,CAdF,EAeE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWS,UAAX,CAAsBC,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,KAAL,CAAWS,UAAX,CAAsBE,IAD3B,CAfF,CAFF,CADF,CADF,CA3BF,CAnBF,CAFF,CADF;AA+ED;;;;EAtJejC,S;;AAwJlB,eAAegB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Container, Col, Form, Alert,\n  FormGroup, Label, Input,\n  Button, TabContent, TabPane, Nav, NavItem, NavLink, Row\n} from \"reactstrap\";\nimport classnames from 'classnames';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romanNumber: '',\n      romanResponse: '',\n      numericNumber: '',\n      numericResponse: '',\n      numericError: {visible:false, text: ''},\n      romanError: {visible:false, text: ''},\n    }\n    this.romanChange = this.romanChange.bind(this);\n    this.numericChange = this.numericChange.bind(this);\n\n    this.handleToNumeric = this.handleToNumeric.bind(this);\n    this.handleToRoman = this.handleToRoman.bind(this);\n    this.toggle = this.toggle.bind(this);\n\n  }\n\n  romanChange(event) {\n    this.setState({\n      romanNumber: event.target.value\n    })\n  }\n\n  numericChange(event) {\n    this.setState({\n      numericNumber: event.target.value\n    })\n  }\n\n  handleToNumeric = async (event) => {\n    event.preventDefault();\n    const response = await fetch(`/api/v1/convertToNumeric?number=${this.state.romanNumber}`);\n    try {\n      const body = await response.json();\n      if(body.success){\n        this.setState({ romanResponse: body.message })\n      } else {\n        this.setState({ romanError: {visible:true, text:body.message} })  \n      }\n    } catch (error) {\n      this.setState({ romanError: {visible:true, text:error.message} })\n    }\n  }\n\n  handleToRoman = async (event) => {\n    event.preventDefault();    \n    const response = await fetch(`/api/v1/convertToRoman?number=${this.state.numericNumber}`);\n    try {\n      const body = await response.json();\n      if(body.success) {\n        this.setState({ numericResponse: body.message })\n      } else {\n        this.setState({ numericError: {visible:true, text:body.message} })  \n      }\n      \n    } catch (error) {\n      this.setState({ numericError: {visible:true, text:error.message} })\n    }\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  render() {\n    return (\n      <Container className=\"container-fluid\">\n        <h2 className=\"text-center\">Roman Conversor</h2>\n        <div>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '1' })}\n                onClick={() => { this.toggle('1'); }}\n              >\n                Numeric to Roman\n            </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: this.state.activeTab === '2' })}\n                onClick={() => { this.toggle('2'); }}\n              >\n                Roman to numeric\n            </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col sm=\"12\">\n                  <h4>Numeric to Roman</h4>\n                  <Form className=\"form center\" onSubmit={this.handleToRoman}>\n                    <Col>\n                      <FormGroup>\n                        <Label>Number</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"numeric\"\n                          id=\"numeric\"\n                          placeholder=\"Insert a number ex: 123\"\n                          onChange={this.numericChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Button>Calculate</Button>\n                     <Label value={this.state.numericResponse}>Result: {this.state.numericResponse}</Label>\n                     <Alert color=\"info\" isOpen={this.state.numericError.visible}>\n                        {this.state.numericError.text}\n                    </Alert>\n                  </Form>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Col sm=\"12\">\n                  <h4>Roman to numeric</h4>\n                  <Form className=\"form center\" onSubmit={this.handleToNumeric}>\n                    <Col>\n                      <FormGroup>\n                        <Label>Roman</Label>\n                        <Input\n                          type=\"text\"\n                          name=\"roman\"\n                          id=\"roman\"\n                          placeholder=\"Insert Roman Number ex: XVI\"\n                          onChange={this.romanChange}\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Button>Calculate</Button>\n                    <Label value={this.state.romanResponse}>Result: {this.state.romanResponse}</Label>\n                    <Alert color=\"info\" isOpen={this.state.romanError.visible}>\n                        {this.state.romanError.text}\n                    </Alert>\n                  </Form>\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </div>\n      </Container>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}